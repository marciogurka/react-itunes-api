{"version":3,"sources":["ListSearch/ListSearch.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","resultsInfo","marginBottom","spacing","textAlign","textField","width","welcomeImg","maxHeight","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","cardAction","bottom","position","ListSearch","items","searchAlbum","search","classes","React","useState","values","setValues","useEffect","Fragment","Container","className","maxWidth","length","Typography","gutterBottom","variant","component","Grid","container","map","item","i","key","xs","sm","md","Card","CardActionArea","href","collectionViewUrl","CardMedia","image","artworkUrl100","title","collectionCensoredName","CardContent","artistName","CardActions","Button","size","color","startIcon","justify","align","paragraph","Box","m","src","alt","override","css","root","backgroundColor","palette","background","paper","minHeight","icon","marginRight","heroContent","padding","loadingDiv","alignItems","justifyContent","zIndex","heroButtons","marginTop","flexContainer","switchContainer","minWidth","footer","footerIcon","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","name","prop","searchUrl","hasError","isLoading","fetchData","a","url","axios","result","data","results","CssBaseline","AppBar","Toolbar","Link","noWrap","sizeUnit","loading","onSubmit","event","preventDefault","FormControl","InputLabel","htmlFor","Input","id","type","value","fullWidth","onChange","target","required","Switch","checked","role","aria-label","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4475cdbe.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n  resultsInfo: {\n    marginBottom: theme.spacing(6),\n    textAlign: 'center'\n  },\n  textField: {\n    width: '100%'\n  },\n  welcomeImg: {\n    maxHeight: '100%'\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(6),\n    paddingBottom: theme.spacing(6),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardAction: {\n    bottom: 0,\n    position: 'absolute'\n  }\n}));\n\nexport default function ListSearch({items, searchAlbum, search}) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    items,\n    searchAlbum,\n    search\n  });\n\n  React.useEffect(() => {\n    setValues({ items, search })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items]);\n\n\n  return (\n    <React.Fragment>\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      {\n        (values.items && values.items.length > 0) &&\n        <div className=\"results-div\">\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.resultsInfo}>\n            Top {values.items.length} results for \"{ values.search }\":\n          </Typography>\n          <Grid container spacing={4}>\n          \n          {values.items.map((item, i) => (\n            <Grid item key={i} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardActionArea href={item.collectionViewUrl}>\n                    <CardMedia\n                    className={classes.cardMedia}\n                    image={item.artworkUrl100}\n                    title={item.collectionCensoredName}\n                    />\n                    <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      { item.artistName }\n                    </Typography>\n                    <Typography>\n                      { item.collectionCensoredName }\n                    </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\" href={item.collectionViewUrl} startIcon={<LibraryMusicIcon />}>\n                      Listen on iTunes\n                    </Button>\n                  </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n        </div>\n      }\n      {\n        (!values.items || values.items.length === 0) &&\n          <Grid container spacing={4} className=\"no-results-info\" justify=\"center\">\n            { values.search && \n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                There is no results for \"{ values.search }\"\n                <Box component=\"div\" m={1}>\n                  <img className={classes.welcomeImg} src=\"https://media.giphy.com/media/l41lOzTIL8lfZ15fy/giphy.gif\" alt=\"No results\"/>\n                </Box>\n              </Typography>\n            }\n            { !values.search && \n              <Box component=\"div\" m={1}>\n                <img className={classes.welcomeImg} src=\"https://media.giphy.com/media/3oKIPd3Uwz7lqZW9uo/giphy.gif\" alt=\"Welcome\"/>\n              </Box>\n              \n            }\n          </Grid>\n      }\n    </Container>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\nimport ListSearch from './ListSearch/ListSearch';\nimport axios from 'axios';\nimport { css } from '@emotion/core';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\n\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n`;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 0),\n  },\n  loadingDiv: {\n    alignItems: 'center',\n    background: 'rgba(255, 255, 255, 0.66)',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  textField: {\n    width: '100%'\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  flexContainer: {\n    display: 'flex',\n  },\n  switchContainer: {\n    minWidth: 190,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 'auto',\n    padding: theme.spacing(4)\n  },\n  footerIcon: {\n    fontSize: 13,\n    marginRight: 5\n  }\n}));\n\n/**\n * @name App\n * @author Márcio José Gurka Júnior\n * @description App Component - Main component where all the application is started\n */\n\nexport default function App() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    search: '',\n    items: [],\n    searchAlbum: true,\n    searchUrl: \"\",\n    hasError: false,\n    isLoading: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleCheckChange = name => event => {\n    setValues({ ...values, [name]: event.target.checked });\n  };\n\n  /**\n   * @name fetchData\n   * @author Márcio José Gurka Júnior\n   * @description Function that retrieve the data from the iTunes API\n   */\n  const fetchData = async () => {\n    let url = `https://itunes.apple.com/search?term=${values.search}&entity=${(values.searchAlbum) ? `album` : `song`}`;\n    if(!values.isLoading) {\n      setValues({ ...values, hasError: false, isLoading: true });\n      try {\n        const result = await axios(url);\n        setValues({ ...values, items: result.data.results, isLoading: false });\n      } catch (error) {\n        setValues({ ...values, hasError: true, isLoading: false });\n      }\n    }\n  }\n\n  return (\n    <main className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <AlbumIcon className={classes.icon} />\n          <Link variant=\"h6\" color=\"inherit\" noWrap href=\"/\">\n            React iTunes App\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <main>\n        { values.isLoading && \n          <div className={classes.loadingDiv}>\n            <PropagateLoader\n              css={override}\n              sizeUnit={\"px\"}\n              size={40}\n              color={'#123abc'}\n              loading={values.isLoading}\n            />\n          </div> \n        }\n          \n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <form onSubmit={ event => {\n            event.preventDefault();\n            fetchData();\n          }}>\n            <Container maxWidth=\"md\">\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Music search by {' '}\n                <Link color=\"inherit\" href=\"https://marciogurka.com/\">\n                  @marciogurka\n                </Link>\n              </Typography>\n              <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                Search an artist's album or song using the search below and get info from the iTunes API.\n              </Typography>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={2} justify=\"center\" alignItems=\"flex-end\">\n                  <Grid item xs>\n                    <FormControl className={classes.textField}>\n                      <InputLabel htmlFor=\"search-text\">What album/music are you looking for?</InputLabel>\n                      <Input\n                        id=\"search-text\"\n                        type={'text'}\n                        value={values.search}\n                        fullWidth\n                        onChange={handleChange('search')}\n                        required\n                      />\n                    </FormControl>\n                  </Grid>\n                  <Grid className={classes.flexContainer} item>\n                    <Typography component=\"div\" className={classes.switchContainer}>\n                      <Grid component=\"label\" container alignItems=\"center\" justify=\"center\" spacing={1}>\n                        <Grid item>Music</Grid>\n                        <Grid item>\n                          <Switch\n                            color=\"primary\"\n                            checked={!!values.searchAlbum}\n                            onChange={handleCheckChange('searchAlbum')}\n                            id=\"search-type\"\n                          />\n                        </Grid>\n                        <Grid item>Album</Grid>\n                      </Grid>\n                    </Typography>\n                  </Grid>\n                  <Grid className={classes.flexContainer} item>\n                    <Button variant=\"contained\" color=\"primary\" id=\"search-btn\" type=\"submit\">\n                      Search\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </Container>\n          </form>\n        </div>\n        <ListSearch items={values.items} searchAlbum={values.searchAlbum} search={values.search}/>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"div\">\n          Made with <span role=\"img\" aria-label=\"heart\">♥️</span> by {' '}\n          <Link color=\"inherit\" href=\"https://marciogurka.com/\">\n            @marciogurka\n          </Link>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" component=\"p\">\n            <Link color=\"inherit\" href=\"https://github.com/marciogurka/react-itunes-api\">\n              <GitHubIcon className={classes.footerIcon}/>\n              Check the source code.\n            </Link>\n          </Typography>\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </main>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}